// 
pipeline {
    agent any

    environment {
        // Git repository URL and credentials ID
        REPO_URL = 'https://github.com/Suii2023/basicCode.git'  // Your Git repository URL
        BRANCH = 'main'  // Branch you want to build
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from your private Git repository using the Personal Access Token (PAT)
                git credentialsId: 'github-token', url: "${REPO_URL}", branch: "${BRANCH}"
            }
        }

        stage('Test') {
            steps {
                // Test the code before buidling the image 
                // Include other tests  as well
                sh 'pytest test/ --junitxml=test-results.xml'
            }
        }

        stage('Build Image') {
            steps {
                dir('gitHub-api/python-project') {
                    // Build the Docker image, using the current directory as context
                    sh 'docker build -t suii_app:latest.'
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Stop and remove any existing container
                    sh '''
                    docker stop suii_app || true
                    docker rm suii_app || true
                    '''
                    // Run the newly built Docker image
                    sh 'docker run -d --name suii_app -p 5000:5000 suii_app:latest'
                }
            }
        }
    }

    post {
        always {
            // Clean up workspace after build
            junit 'test-results.xml' // for Jenkins to parse test result
            cleanWs()
        }
        success {
            emailext subject: 'Jenkins Build Success',
                     body: 'The Jenkins build was successful.'
        }
        failure {
            emailext subject: 'Jenkins Build Failure',
                     body: 'The Jenkins build has failed. Please check the console output for details.'
        }
    }
}
