# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application - Build, Test, and Deploy to Minikube

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-test-deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r python-project/requirements.txt

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest python-project/tests/
    # Step 5: Install Docker
    - name: Install Docker
      run: |
        curl -fsSL https://get.docker.com | sh
        sudo usermod -aG docker $USER
        sudo systemctl start docker

    # Step 6: Install Minikube
    - name: Install Minikube
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube

    # Step 7: Start Minikube
    - name: Start Minikube
      run: |
        minikube start --driver=docker
    - name: Verify Minikube Status
      run: minikube status

    # Step 8: Build Docker Image in Minikube
    - name: Build Docker Image
      run: |
        eval $(minikube docker-env)
        docker build -t python-app:latest python-project/
        docker images

    # Step 9: Push Docker Image to Docker Hub (Optional but recommended)
    - name: Push Docker Image to Docker Hub
      run: |
        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        docker tag python-app:latest $DOCKER_USERNAME/python-app:latest
        docker push $DOCKER_USERNAME/python-app:latest

    # Step 10: Apply Kubernetes manifests (deployment and service)
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl get pods
        kubectl get svc
        kubectl describe pods

    # Step 11: Expose Service
    - name: Expose Service
      run: |
        minikube service python-app-service --url

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: github.ref == 'refs/heads/main'

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     - name: Deploy to Integration
  #       run: |
  #         echo "Starting deployment..."
  #         # Replace this echo with actual deployment commands, for example:
  #         # ssh user@your-server "cd /path/to/project && git pull && systemctl restart your-service"


